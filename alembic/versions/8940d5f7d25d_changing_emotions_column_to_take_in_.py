"""Changing emotions column to take in List[str]

Revision ID: 8940d5f7d25d
Revises: 384316cd5dc8
Create Date: 2024-07-28 03:30:36.562138

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8940d5f7d25d'
down_revision: Union[str, None] = '384316cd5dc8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('data_entries')
    op.alter_column('entries', 'emotions',
               existing_type=postgresql.ARRAY(postgresql.ENUM('SADNESS', 'HAPPINESS', 'FEAR', 'ANGER', 'SURPRISE', 'DISGUST', name='emotionsenum')),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('entries', 'emotions',
               existing_type=sa.String(),
               type_=postgresql.ARRAY(postgresql.ENUM('SADNESS', 'HAPPINESS', 'FEAR', 'ANGER', 'SURPRISE', 'DISGUST', name='emotionsenum')),
               existing_nullable=True)
    op.create_table('data_entries',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('metadata_', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('node_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(dim=768), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='data_entries_pkey')
    )
    # ### end Alembic commands ###
